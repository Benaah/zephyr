/*
 * Copyright (c) 2025 Kargo Chain
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;

#include <espressif/esp32s3/esp32s3_wroom_n16r8.dtsi>
#include "kargopod_esp32s3-pinctrl.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "KargoPod ESP32-S3 Prototype";
	compatible = "kargo,kargopod-esp32s3";

	aliases {
		led0 = &blue_led;
		sw0 = &button0;
		i2c-0 = &i2c0;
		watchdog0 = &wdt0;
	};

	chosen {
		zephyr,sram = &sram0;
		zephyr,console = &usb_serial;
		zephyr,shell-uart = &usb_serial;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,bt-hci = &esp32_bt_hci;
	};

	leds {
		compatible = "gpio-leds";
		blue_led: led_0 {
			gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>;
			label = "Status LED";
		};
	};

	buttons {
		compatible = "gpio-keys";
		button0: button_0 {
			gpios = <&gpio0 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "User button";
			zephyr,code = <INPUT_KEY_0>;
		};
	};

	vbatt {
		compatible = "voltage-divider";
		io-channels = <&adc0 6>;
		output-ohms = <100000>;
		full-ohms = <(100000 + 100000)>;
	};
};

&usb_serial {
	status = "okay";
};

&uart0 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-names = "default";
};

&i2c0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c0_default>;
	pinctrl-names = "default";

	sht4x: sht4x@44 {
		compatible = "sensirion,sht4x";
		reg = <0x44>;
		label = "SHT4X";
	};

	lis3dh: lis3dh@18 {
		compatible = "st,lis3dh";
		reg = <0x18>;
		irq-gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;
		label = "LIS3DH";
	};
};

&spi2 {
	status = "okay";
	pinctrl-0 = <&spi2_default>;
	pinctrl-names = "default";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&wdt0 {
	status = "okay";
};

&timer0 {
	status = "okay";
};

&timer1 {
	status = "okay";
};

&adc0 {
	status = "okay";
};

&esp32_bt_hci {
	status = "okay";
};

&flash0 {
	status = "okay";
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* Reserve 64kB for the bootloader */
		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x00010000>;
			read-only;
		};

		/* Reserve 1024kB for the application in slot 0 */
		slot0_partition: partition@10000 {
			label = "image-0";
			reg = <0x00010000 0x00100000>;
		};

		/* Reserve 1024kB for the application in slot 1 */
		slot1_partition: partition@110000 {
			label = "image-1";
			reg = <0x00110000 0x00100000>;
		};

		/* Reserve 256kB for storage */
		storage_partition: partition@210000 {
			label = "storage";
			reg = <0x00210000 0x00040000>;
		};

		/* Reserve 16kB for scratch */
		scratch_partition: partition@250000 {
			label = "image-scratch";
			reg = <0x00250000 0x00004000>;
		};
	};
};
